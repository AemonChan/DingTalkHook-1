//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DTViewController.h"

@class DTBizSettingDeviceModel, DTSmartBleBlockHandler, DTSmartDeviceBleIMP, DTSmartDeviceConnectGuideView, DTSmartDeviceConnectMaskViewV3, DTSmartEntityModel, NSDate, NSDictionary, NSTimer, UIButton, UIImageView, UILabel;

@interface DTSmartDeviceConnectViewController : DTViewController
{
    _Bool _isGoingToUnbindOfflineDevice;
    long long _actionType;
    NSDictionary *_queryParam;
    DTSmartDeviceConnectGuideView *_guideView;
    UIImageView *_connectTypeImageView;
    DTSmartDeviceConnectMaskViewV3 *_connectMaskView;
    UILabel *_statusTitleLabel;
    UILabel *_statusDescriptionLabel;
    UILabel *_tipLabel;
    UIButton *_reconnectBtn;
    unsigned long long _connectStatus;
    long long _bluetoothState;
    DTBizSettingDeviceModel *_bizSettingDevModel;
    DTSmartEntityModel *_smartModel;
    DTSmartDeviceBleIMP *_deviceService;
    double _minScanTimeInterval;
    NSDate *_startScanDate;
    DTSmartBleBlockHandler *_bleBlockHandler;
    NSTimer *_scanTimer;
}

+ (_Bool)isStatusAllowed:(long long)arg1 actionType:(long long)arg2;
+ (long long)actionTypeForName:(id)arg1;
@property(nonatomic) _Bool isGoingToUnbindOfflineDevice; // @synthesize isGoingToUnbindOfflineDevice=_isGoingToUnbindOfflineDevice;
@property(retain, nonatomic) NSTimer *scanTimer; // @synthesize scanTimer=_scanTimer;
@property(retain, nonatomic) DTSmartBleBlockHandler *bleBlockHandler; // @synthesize bleBlockHandler=_bleBlockHandler;
@property(retain, nonatomic) NSDate *startScanDate; // @synthesize startScanDate=_startScanDate;
@property(nonatomic) double minScanTimeInterval; // @synthesize minScanTimeInterval=_minScanTimeInterval;
@property(retain, nonatomic) DTSmartDeviceBleIMP *deviceService; // @synthesize deviceService=_deviceService;
@property(retain, nonatomic) DTSmartEntityModel *smartModel; // @synthesize smartModel=_smartModel;
@property(copy, nonatomic) DTBizSettingDeviceModel *bizSettingDevModel; // @synthesize bizSettingDevModel=_bizSettingDevModel;
@property(nonatomic) long long bluetoothState; // @synthesize bluetoothState=_bluetoothState;
@property(nonatomic) unsigned long long connectStatus; // @synthesize connectStatus=_connectStatus;
@property(retain, nonatomic) UIButton *reconnectBtn; // @synthesize reconnectBtn=_reconnectBtn;
@property(retain, nonatomic) UILabel *tipLabel; // @synthesize tipLabel=_tipLabel;
@property(retain, nonatomic) UILabel *statusDescriptionLabel; // @synthesize statusDescriptionLabel=_statusDescriptionLabel;
@property(retain, nonatomic) UILabel *statusTitleLabel; // @synthesize statusTitleLabel=_statusTitleLabel;
@property(retain, nonatomic) DTSmartDeviceConnectMaskViewV3 *connectMaskView; // @synthesize connectMaskView=_connectMaskView;
@property(retain, nonatomic) UIImageView *connectTypeImageView; // @synthesize connectTypeImageView=_connectTypeImageView;
@property(retain, nonatomic) DTSmartDeviceConnectGuideView *guideView; // @synthesize guideView=_guideView;
@property(copy, nonatomic) NSDictionary *queryParam; // @synthesize queryParam=_queryParam;
@property long long actionType; // @synthesize actionType=_actionType;
- (void).cxx_destruct;
- (void)_gotoNeedResetPage;
- (void)_gotoDeviceLitePage:(id)arg1;
- (void)_gotoDeviceLiteAppUrl;
- (void)_gotoOrgSettingPage;
- (void)_gotoWifiSettingPage;
- (void)_gotoAutoWifiSettingPage;
- (void)_processOfflineDeviceUnbindFailed:(id)arg1;
- (void)_processOfflineDeviceUnbindSuccess;
- (void)_processOfflineDeviceUnbind;
- (_Bool)_isNeedOfflineDeviceUnbind:(id)arg1;
- (void)_processAfterAutoWifiSettingInvalid;
- (void)_processBeforeAutoWifiSetting;
- (id)filteredAlphaDeviceModels:(id)arg1;
- (void)_didRecvBleConnectChangeNtf:(id)arg1;
- (void)_onNearestDeviceUpdate:(id)arg1;
- (_Bool)isScaning;
- (id)calcNearestOne:(id)arg1 unconfigItem:(id)arg2 limitBindedDevice:(_Bool)arg3;
- (void)getActiveInfo;
- (void)resetDevice:(id)arg1;
- (void)getDeviceFeature;
- (void)getWifiInfo:(CDUnknownBlockType)arg1;
- (void)handshake:(id)arg1 succBlock:(CDUnknownBlockType)arg2 failedBlock:(CDUnknownBlockType)arg3;
- (void)getDeviceSecret:(CDUnknownBlockType)arg1 failedBlock:(CDUnknownBlockType)arg2;
- (_Bool)isBluetoothOn;
- (void)connectFailedWithTitle:(id)arg1 desc:(id)arg2;
- (void)didBleConnected;
- (void)enterState:(unsigned long long)arg1;
- (void)stopListen;
- (void)_scanTimeout;
- (void)_beginListenScan;
- (void)updateUI;
- (void)_onBluetoothChanged:(id)arg1;
- (void)_dismissNav;
- (void)_reconnectWithAlert;
- (void)reconnect;
- (void)_goBack;
- (void)_refreshUI;
- (void)startGuideView;
- (void)stopGuideView;
- (_Bool)isViewOnTop;
- (void)_loadComponents;
- (void)_startConnectToSmartDevice;
- (void)resetConnectInfo;
- (void)_unregisterClientStatusChangeNtf;
- (void)_registerClientStatusChangeNtf;
- (void)_unregisterBluetoothNotifcation;
- (void)_registerBluetoothNotification;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)nearestBleChange:(id)arg1 limitBindedDevice:(_Bool)arg2;
- (void)buildBleBlockHandler;
- (_Bool)calcLimitBindedDevice;
- (id)numberOfQueryParamForKey:(id)arg1;
- (void)viewDidLoad;

@end

