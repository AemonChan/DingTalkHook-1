//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSString;

@interface IVYTraceroute : NSObject
{
    _Bool _running;
    int _udpPort;
    int _maxTTL;
    int _maxAttempts;
    double _readTimeout;
    NSString *_runningSyn;
    NSMutableArray *_hops;
    long long _identifier;
    long long _nextSequenceNumber;
    CDUnknownBlockType _handler;
    CDUnknownBlockType _processHandler;
}

+ (const struct ICMPHeader *)icmpInPacket:(id)arg1;
+ (unsigned long long)icmpHeaderOffsetInPacket:(id)arg1;
+ (id)sharedTracerouteWithMaxTTL:(int)arg1 timeout:(double)arg2 maxAttempts:(int)arg3 port:(int)arg4;
+ (id)sharedTraceroute;
@property(copy, nonatomic) CDUnknownBlockType processHandler; // @synthesize processHandler=_processHandler;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) long long nextSequenceNumber; // @synthesize nextSequenceNumber=_nextSequenceNumber;
@property(nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSMutableArray *hops; // @synthesize hops=_hops;
@property(copy, nonatomic) NSString *runningSyn; // @synthesize runningSyn=_runningSyn;
@property(nonatomic, getter=isRunning) _Bool running; // @synthesize running=_running;
@property(nonatomic) int maxAttempts; // @synthesize maxAttempts=_maxAttempts;
@property(nonatomic) double readTimeout; // @synthesize readTimeout=_readTimeout;
@property(nonatomic) int maxTTL; // @synthesize maxTTL=_maxTTL;
@property(nonatomic) int udpPort; // @synthesize udpPort=_udpPort;
- (void).cxx_destruct;
- (id)packEchoPacket;
- (void)doTraceRoute:(id)arg1;
- (void)tracerouteToHost:(id)arg1 process:(CDUnknownBlockType)arg2 handler:(CDUnknownBlockType)arg3;
- (void)stopTrace;
- (id)initWithMaxTTL:(int)arg1 timeout:(int)arg2 maxAttempts:(int)arg3 port:(int)arg4;
- (id)init;

@end

