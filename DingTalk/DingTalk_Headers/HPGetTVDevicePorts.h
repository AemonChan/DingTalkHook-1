//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class HPAsyncSocket, NSMutableData, NSTimer;

@interface HPGetTVDevicePorts : NSObject
{
    _Bool _speakerAudio;
    int _requestType;
    HPAsyncSocket *_raopSocket;
    CDUnknownBlockType _callback;
    NSMutableData *_receivedPacketQueue;
    long long _receivePort;
    NSTimer *_timeoutTimer;
}

+ (void)closeCastWithNoticeTVWithIP:(id)arg1 port:(long long)arg2 timeout:(double)arg3 callBack:(CDUnknownBlockType)arg4;
+ (void)getTVDeviceMacWithIP:(id)arg1 port:(long long)arg2 timeout:(double)arg3 callBack:(CDUnknownBlockType)arg4;
+ (void)getTVDevicePortsWithIP:(id)arg1 port:(long long)arg2 speakerAudio:(_Bool)arg3 receivePort:(long long)arg4 timeout:(double)arg5 callBack:(CDUnknownBlockType)arg6;
+ (id)sharedGetTVDevicePorts;
@property(nonatomic) int requestType; // @synthesize requestType=_requestType;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(nonatomic) long long receivePort; // @synthesize receivePort=_receivePort;
@property(nonatomic) _Bool speakerAudio; // @synthesize speakerAudio=_speakerAudio;
@property(retain, nonatomic) NSMutableData *receivedPacketQueue; // @synthesize receivedPacketQueue=_receivedPacketQueue;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(retain, nonatomic) HPAsyncSocket *raopSocket; // @synthesize raopSocket=_raopSocket;
- (void).cxx_destruct;
- (id)init;
- (void)parseOnePacket:(id)arg1;
- (void)logOutput:(id)arg1;
- (void)takeApartForPacketFromData:(id)arg1;
- (void)closeCast;
- (void)getMacInfo;
- (void)sendInfo;
- (void)sendData:(id)arg1 tag:(long long)arg2;
- (void)onSocket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)onSocketDidDisconnect:(id)arg1;
- (void)onSocket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)onSocket:(id)arg1 didWritePartialDataOfLength:(long long)arg2 tag:(long long)arg3;
- (void)onSocket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)timeoutSelector;

@end

