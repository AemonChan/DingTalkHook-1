//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class LWPDownFileAttribute, LWPFile, NSFileHandle, NSMutableArray, NSRecursiveLock, NSString;

@interface LWPDownloadTask : NSObject
{
    unsigned long long _options;
    _Bool _canceled;
    _Bool _appearJumpSlice;
    LWPFile *_fileInfo;
    CDUnknownBlockType _startBlock;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completedBlock;
    double _progress;
    NSRecursiveLock *_lock;
    long long _state;
    NSFileHandle *_fileHandle;
    NSString *_streamId;
    unsigned long long _appendDataLength;
    LWPDownFileAttribute *_fileAttr;
    NSString *_uniqueSid;
    NSMutableArray *_jumpSliceList;
}

+ (id)threadQueue;
@property(retain, nonatomic) NSMutableArray *jumpSliceList; // @synthesize jumpSliceList=_jumpSliceList;
@property(copy, nonatomic) NSString *uniqueSid; // @synthesize uniqueSid=_uniqueSid;
@property(retain, nonatomic) LWPDownFileAttribute *fileAttr; // @synthesize fileAttr=_fileAttr;
@property(nonatomic) unsigned long long appendDataLength; // @synthesize appendDataLength=_appendDataLength;
@property(copy, nonatomic) NSString *streamId; // @synthesize streamId=_streamId;
@property(retain, nonatomic) NSFileHandle *fileHandle; // @synthesize fileHandle=_fileHandle;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(nonatomic) _Bool appearJumpSlice; // @synthesize appearJumpSlice=_appearJumpSlice;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(copy, nonatomic) CDUnknownBlockType completedBlock; // @synthesize completedBlock=_completedBlock;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(copy, nonatomic) CDUnknownBlockType startBlock; // @synthesize startBlock=_startBlock;
@property(retain, nonatomic) LWPFile *fileInfo; // @synthesize fileInfo=_fileInfo;
@property(nonatomic, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
- (void).cxx_destruct;
- (void)deleteDownloadProgress;
- (void)saveDownloadProgress;
- (void)clearDelegateAndCancel;
- (void)triggerProgressBlock:(id)arg1 withResponse:(id)arg2 error:(id)arg3;
- (void)reset;
- (void)done;
- (void)triggerCompleteBlock:(id)arg1 withResponse:(id)arg2 error:(id)arg3;
- (void)dumpFile;
- (void)downloadFileFromPos:(long long)arg1 toPos:(long long)arg2;
- (id)findNextSliceIfExist;
- (void)tryAppendJumpSlices;
- (void)appendDataWithDownResponse:(id)arg1 error:(id *)arg2 mid:(id)arg3;
- (id)filePathRequestWithRange:(long long)arg1 toPos:(long long)arg2 authInfo:(id)arg3;
- (unsigned long long)downloadLength;
- (_Bool)appendData:(id)arg1 offset:(id)arg2 error:(id *)arg3;
- (void)cancelInternal;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (void)sendCancelStreamRequest:(id)arg1;
- (long long)requestSubMode;
- (void)cancel;
- (void)beginDownload;
- (_Bool)checkFilePathValid;
- (int)sliceLengthForTotalSize:(long long)arg1;
- (int)sliceLengthForTotalSize;
- (_Bool)checkFileInfoValid:(id)arg1 withUrl:(id)arg2 savePath:(id)arg3;
- (id)infoFilePathForUrl:(id)arg1 savePath:(id)arg2;
- (id)loadFileInfo:(id)arg1 savePath:(id)arg2;
- (void)run;
- (void)downloadFileWithURL:(id)arg1 saveToPath:(id)arg2 fileAttr:(id)arg3 options:(unsigned long long)arg4 start:(CDUnknownBlockType)arg5 progress:(CDUnknownBlockType)arg6 completed:(CDUnknownBlockType)arg7;
- (void)downloadFileWithURL:(id)arg1 saveToPath:(id)arg2 options:(unsigned long long)arg3 progress:(CDUnknownBlockType)arg4 completed:(CDUnknownBlockType)arg5;
- (void)dealloc;
- (id)init;
- (void)appendDataToFileHandle:(id)arg1 data:(id)arg2 offset:(unsigned long long)arg3 noSaveDataLength:(unsigned long long *)arg4 error:(id *)arg5;
- (void)appendDataTo:(id)arg1 from:(id)arg2 offset:(unsigned long long)arg3 error:(id *)arg4;

@end

