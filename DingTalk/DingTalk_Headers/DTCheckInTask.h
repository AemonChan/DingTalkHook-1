//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AMapLocationManagerDelegate-Protocol.h"
#import "DTCheckIntaskProtocol-Protocol.h"
#import "NSCopying-Protocol.h"

@class AMapLocationManager, CLLocation, NSArray, NSDate, NSDictionary, NSMutableArray, NSNumber, NSString;
@protocol DTCheckInTaskDelegate;

@interface DTCheckInTask : NSObject <NSCopying, AMapLocationManagerDelegate, DTCheckIntaskProtocol>
{
    _Bool _lastFuzzyMatched;
    _Bool _hasMatched;
    _Bool _hasFuzzyMatched;
    _Bool _disableDetectRiskOfFakeLocation;
    _Bool _checking;
    _Bool _uploading;
    _Bool _hasRetryed;
    NSString *_taskId;
    long long _planId;
    NSString *_corpId;
    NSNumber *_startDate;
    NSNumber *_endDate;
    NSString *_wifiList;
    NSString *_positionList;
    NSString *_deviceId;
    long long _maxOffset;
    NSDictionary *_accuracyMap;
    NSDictionary *_extentions;
    NSArray *_plainWifiList;
    NSArray *_plainPositionList;
    double _execInterval;
    long long _execTimes;
    double _lastDistance;
    double _miniDistance;
    NSString *_lastBssId;
    NSString *_lastSsId;
    CLLocation *_lastLocation;
    id <DTCheckInTaskDelegate> _delegate;
    AMapLocationManager *_aLocationManager;
    NSMutableArray *_monitoredRegions;
    long long _srcType;
    NSDictionary *_locateConfig;
    NSDate *_nextLocateDate;
}

@property(retain, nonatomic) NSDate *nextLocateDate; // @synthesize nextLocateDate=_nextLocateDate;
@property(copy, nonatomic) NSDictionary *locateConfig; // @synthesize locateConfig=_locateConfig;
@property(nonatomic) _Bool hasRetryed; // @synthesize hasRetryed=_hasRetryed;
@property(nonatomic) long long srcType; // @synthesize srcType=_srcType;
@property(nonatomic) _Bool uploading; // @synthesize uploading=_uploading;
@property(nonatomic) _Bool checking; // @synthesize checking=_checking;
@property(retain, nonatomic) NSMutableArray *monitoredRegions; // @synthesize monitoredRegions=_monitoredRegions;
@property(retain, nonatomic) AMapLocationManager *aLocationManager; // @synthesize aLocationManager=_aLocationManager;
@property(nonatomic) _Bool disableDetectRiskOfFakeLocation; // @synthesize disableDetectRiskOfFakeLocation=_disableDetectRiskOfFakeLocation;
@property(nonatomic) __weak id <DTCheckInTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CLLocation *lastLocation; // @synthesize lastLocation=_lastLocation;
@property(copy, nonatomic) NSString *lastSsId; // @synthesize lastSsId=_lastSsId;
@property(copy, nonatomic) NSString *lastBssId; // @synthesize lastBssId=_lastBssId;
@property(nonatomic) double miniDistance; // @synthesize miniDistance=_miniDistance;
@property(nonatomic) _Bool hasFuzzyMatched; // @synthesize hasFuzzyMatched=_hasFuzzyMatched;
@property(nonatomic) _Bool hasMatched; // @synthesize hasMatched=_hasMatched;
@property(nonatomic) _Bool lastFuzzyMatched; // @synthesize lastFuzzyMatched=_lastFuzzyMatched;
@property(nonatomic) double lastDistance; // @synthesize lastDistance=_lastDistance;
@property(nonatomic) long long execTimes; // @synthesize execTimes=_execTimes;
@property(nonatomic) double execInterval; // @synthesize execInterval=_execInterval;
@property(copy, nonatomic) NSArray *plainPositionList; // @synthesize plainPositionList=_plainPositionList;
@property(copy, nonatomic) NSArray *plainWifiList; // @synthesize plainWifiList=_plainWifiList;
@property(copy, nonatomic) NSDictionary *extentions; // @synthesize extentions=_extentions;
@property(copy, nonatomic) NSDictionary *accuracyMap; // @synthesize accuracyMap=_accuracyMap;
@property(nonatomic) long long maxOffset; // @synthesize maxOffset=_maxOffset;
@property(copy, nonatomic) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(copy, nonatomic) NSString *positionList; // @synthesize positionList=_positionList;
@property(copy, nonatomic) NSString *wifiList; // @synthesize wifiList=_wifiList;
@property(retain, nonatomic) NSNumber *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSNumber *startDate; // @synthesize startDate=_startDate;
@property(copy, nonatomic) NSString *corpId; // @synthesize corpId=_corpId;
@property(nonatomic) long long planId; // @synthesize planId=_planId;
@property(retain, nonatomic) NSString *taskId; // @synthesize taskId=_taskId;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)cWifiInfo;
- (double)timestamp;
- (void)amapLocationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)amapLocationManager:(id)arg1 didDetermineState:(long long)arg2 forRegion:(id)arg3;
- (void)amapLocationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)amapLocationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)amapLocationManager:(id)arg1 didStartMonitoringForRegion:(id)arg2;
- (void)amapLocationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)amapLocationManager:(id)arg1 didUpdateLocation:(id)arg2;
- (void)amapLocationManager:(id)arg1 didFailWithError:(id)arg2;
- (double)timeStatEndRecord;
- (void)timeStatStartRecord;
- (void)resetCheckInTask;
- (void)fireCheckInTask;
- (void)activeCheckInTask;
- (id)serializeToString;
- (void)enrichWithString:(id)arg1;
- (void)checkInWithLocation:(id)arg1 ssid:(id)arg2 bssid:(id)arg3;
- (id)nextLocateDateWithMinDisatance:(double)arg1;
- (double)distanceMatchExpandMeters:(double)arg1;
- (_Bool)checkLocation:(double)arg1 lon:(double)arg2 accuracy:(double)arg3;
- (_Bool)checkWifi:(id)arg1;
- (void)queryLocationWifiAndCheck;
- (_Bool)queryWifiAndCheck;
- (void)checkEnvironmentAndUploadDelayed;
- (void)checkEnvironmentAndUpload;
- (void)onClientStatusChanged:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (_Bool)monitingRegion:(id)arg1;
- (void)stopLocationMonitors;
- (void)stopWifiObserver;
- (void)setupLocationMonitors;
- (void)setupWifiObserver;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

